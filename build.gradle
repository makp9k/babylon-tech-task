// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.buildConfig = [
            'compileSdk': 28,
            'minSdk'    : 21
    ]

    ext.versions = [
            'kotlin': '1.3.31',
            'dagger': '2.23.1',
    ]

    ext.deps = [
            'kotlinStdlib': "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
            'arch'        : 'com.github.makp9k:android-app-arch:1dda7c4789c01ff7b05e27233661463a2bfb4ad6',
            'androidx'    : [
                    'appcompat'   : 'androidx.appcompat:appcompat:1.0.2',
                    'recyclerview': 'androidx.recyclerview:recyclerview:1.0.0',
                    'material'    : 'com.google.android.material:material:1.0.0',
                    'constraint'  : 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
            ],
            'rx'          : [
                    'java'     : 'io.reactivex.rxjava2:rxjava:2.2.7',
                    'kotlin'   : 'io.reactivex.rxjava2:rxkotlin:2.3.0',
                    'android  ': 'io.reactivex.rxjava2:rxandroid:2.1.0',
                    'relay'    : 'com.jakewharton.rxrelay2:rxrelay:2.1.0',
                    'rxbinding': [
                            'platform': 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'
                    ],
            ],
            'tests'       : [
                    'junit'  : 'junit:junit:4.12',
                    'mockito': 'org.mockito:mockito-core:2.13.0',
            ],
            'timber'      : 'com.github.ajalt:timberkt:1.5.1',
            'dagger'      : [
                    'runtime' : "com.google.dagger:dagger:${versions.dagger}",
                    'compiler': "com.google.dagger:dagger-compiler:${versions.dagger}",
            ],
            'gson'        : 'com.google.code.gson:gson:2.8.5',
            'retrofit'    : [
                    'runtime'       : 'com.squareup.retrofit2:retrofit:2.5.0',
                    'gson_converter': 'com.squareup.retrofit2:converter-gson:2.5.0',
                    'rx_adapter'    : 'com.squareup.retrofit2:adapter-rxjava2:2.5.0:'
            ],
            'okhttp'      : [
                    'client': 'com.squareup.okhttp3:okhttp:3.13.1'
            ],
            'koptional'   : [
                    'core'  : 'com.gojuno.koptional:koptional:1.6.0',
                    'rxjava': 'com.gojuno.koptional:koptional-rxjava2-extensions:1.6.0'
            ]
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    androidModules(plugins) {
        android {
            compileSdkVersion buildConfig.compileSdk

            defaultConfig {
                minSdkVersion buildConfig.minSdk
            }

            dexOptions {
                preDexLibraries true
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }

        dependencies {
            if (project.name != 'common-android') {
                implementation project(':common-android')
            }
        }
    }

    project.afterEvaluate {
        dependencies {
            implementation deps.kotlinStdlib
            implementation deps.rx.java
            implementation deps.rx.kotlin
            implementation deps.koptional.core
            implementation deps.koptional.rxjava
            implementation deps.timber

//            if (project.name != 'common') {
//                implementation project (':common')
//            }
        }
    }
}

static def androidModules(plugins, closure) {
    plugins.whenPluginAdded { plugin ->
        if ('com.android.build.gradle.AppPlugin' == plugin.class.name
                || 'com.android.build.gradle.LibraryPlugin' == plugin.class.name) {
            closure.call()
        }
    }
}
